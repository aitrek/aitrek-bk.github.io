<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Python中浮点变量相等的比较]]></title>
    <url>%2Fcategory%2F2019%2F08%2F05%2Fpython-float-comparison%2F</url>
    <content type="text"><![CDATA[浮点型数据的近似表示&emsp;&emsp;与整型变量采用精确表示不同，浮点型变量采用的是近似表示，浮点计算天然就是不精确的，所以浮点类型的相等比较不能够采用整型变量的方式，也就是说不能直接使用”==”进行比较。&emsp;&emsp;先看下面例子，其中定义了两个浮点型变量： 123a = 0.1b = 0.1 * 3c = 0.3 把这两个变量打印出来看一下： 123print("a = ", a)print("b = ", b)print("c = ", c) a = 0.1 b = 0.30000000000000004 c = 0.3 &emsp;&emsp;变量a的值与我们所期望在形式上保持一致，而变量b的值却有点出乎意料。然而，从浮点型数据近似角度考虑，b值的表示形式才是更加合理的一个，为什么这么说呢？因为Python对浮点变量的近似做了隐藏处理，在外部显示时采用了最短近似表示，使这些近似值尽可能看起来像个精确值，如果想看一下内部的真实近似值，可以用下面方式： 12345from decimal import Decimalprint("decimal a: ", Decimal(a))print("decimal b: ", Decimal(b))print("decimal c: ", Decimal(c)) decimal a: 0.1000000000000000055511151231257827021181583404541015625 decimal b: 0.3000000000000000444089209850062616169452667236328125 decimal c: 0.299999999999999988897769753748434595763683319091796875 浮点型变量相等的比较&emsp;&emsp;有了上面的decimal形式，我们就很容易理解直接采用“==”比较浮点数据的结果之所以为False了 — $0.1 * 3$和$0.3$的实际上根本就是两个不相同的近似值，它们比较的结果必然False： 10.1 * 3 == 0.3 False &emsp;&emsp;所以，就有了这么一种说法“不要对浮点数据进行等值比较”，因为通常情况下对近似值进行这样的比较是毫无意义的。那么，问题来了，计算机系统中近似值表示方式导致毫无意义的比较，在现实中却是大量存在的，例如两个点之间距离是否相等的比较，既然不能使用“==”比较，那要怎么办呢？解决办法就是指定精度范围再进行比较。 1234def almost_equal(f1, f2, tol=1e-9): return abs(f1 - f2) &lt; tolis_close(0.1 * 3, 0.3) True &emsp;&emsp;主流编程语言都可以采用这用方式对浮点型数据进行近似相等比较，Python还可以使用内置的round()函数，用下面方式比较： 12print(round(0.1 * 3, 9) == round(0.3, 9))print(round(0.1 * 3, 19) == round(0.3, 19)) True False References: Python Algorithms by Magnus Lie Hetland. https://docs.python.org/2/tutorial/floatingpoint.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fcategory%2F2019%2F04%2F22%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
